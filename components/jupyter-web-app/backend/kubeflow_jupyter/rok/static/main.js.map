{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main-table/main-table.component.html","webpack:///./src/app/main-table/main-table.component.scss","webpack:///./src/app/main-table/main-table.component.ts","webpack:///./src/app/main-table/namespace-select/namespace-select.component.html","webpack:///./src/app/main-table/namespace-select/namespace-select.component.scss","webpack:///./src/app/main-table/namespace-select/namespace-select.component.ts","webpack:///./src/app/main-table/resource-table/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/main-table/resource-table/confirm-dialog/confirm-dialog.component.scss","webpack:///./src/app/main-table/resource-table/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/main-table/resource-table/resource-table.component.html","webpack:///./src/app/main-table/resource-table/resource-table.component.scss","webpack:///./src/app/main-table/resource-table/resource-table.component.ts","webpack:///./src/app/resource-form/resource-form.component.html","webpack:///./src/app/resource-form/resource-form.component.scss","webpack:///./src/app/resource-form/resource-form.component.ts","webpack:///./src/app/resource-form/volume/new-volume-form/new-volume-form.component.html","webpack:///./src/app/resource-form/volume/new-volume-form/new-volume-form.component.scss","webpack:///./src/app/resource-form/volume/new-volume-form/new-volume-form.component.ts","webpack:///./src/app/resource-form/volume/volume.component.html","webpack:///./src/app/resource-form/volume/volume.component.scss","webpack:///./src/app/resource-form/volume/volume.component.ts","webpack:///./src/app/services/kubernetes.service.ts","webpack:///./src/app/services/namespace.service.ts","webpack:///./src/app/services/snack-bar.service.ts","webpack:///./src/app/services/snack-bar/snack-bar.component.html","webpack:///./src/app/services/snack-bar/snack-bar.component.scss","webpack:///./src/app/services/snack-bar/snack-bar.component.ts","webpack:///./src/app/utils/imports.ts","webpack:///./src/app/utils/polling.ts","webpack:///./src/app/utils/types.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainTableComponent } from './main-table/main-table.component';\nimport { ResourceFormComponent } from './resource-form/resource-form.component';\n\nconst routes: Routes = [\n  { path: '', component: MainTableComponent },\n  { path: 'new', component: ResourceFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <!-- <app-headbar></app-headbar> -->\\n</div>\\n\\n<router-outlet>\\n\\n</router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Volumes';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialImportsModule } from './utils/imports';\n\nimport { NamespaceService } from './services/namespace.service';\nimport { KubernetesService } from './services/kubernetes.service';\nimport { SnackBarService } from './services/snack-bar.service';\n\nimport { MainTableComponent } from './main-table/main-table.component';\nimport { NamespaceSelectComponent } from './main-table/namespace-select/namespace-select.component';\nimport { ResourceTableComponent } from './main-table/resource-table/resource-table.component';\nimport { SnackBarComponent } from './services/snack-bar/snack-bar.component';\nimport { ResourceFormComponent } from './resource-form/resource-form.component';\nimport { ConfirmDialogComponent } from './main-table/resource-table/confirm-dialog/confirm-dialog.component';\nimport { VolumeComponent } from './resource-form/volume/volume.component';\nimport { NewVolumeFormComponent } from './resource-form/volume/new-volume-form/new-volume-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainTableComponent,\n    NamespaceSelectComponent,\n    ResourceTableComponent,\n    SnackBarComponent,\n    ResourceFormComponent,\n    ConfirmDialogComponent,\n    VolumeComponent,\n    NewVolumeFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MaterialImportsModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    NamespaceService,\n    KubernetesService,\n    SnackBarService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    SnackBarComponent,\n    ConfirmDialogComponent,\n    NewVolumeFormComponent,\n  ]\n})\nexport class AppModule {\n  constructor() {\n    library.add(fab, fas);\n  }\n}\n","module.exports = \"<!-- Namespaces Selector -->\\n<div class='parent'>\\n  <div class=\\\"spacer\\\"></div>\\n  <app-namespace-select></app-namespace-select>\\n  <div class=\\\"spacer\\\"></div>\\n</div>\\n\\n<!-- The Table showing our Resource -->\\n<div class='parent'>\\n  <div class=\\\"spacer\\\"></div>\\n  <app-resource-table></app-resource-table>\\n  <div class=\\\"spacer\\\"></div>\\n</div>\"","module.exports = \".parent {\\n  display: flex; }\\n\\n.spacer {\\n  flex-grow: 1; }\\n\\napp-namespace-select {\\n  padding-top: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpbW9uYXMvY29kZS9ub3RlYm9va3MtdWkvZnJvbnRlbmQvc3JjL2FwcC9tYWluLXRhYmxlL21haW4tdGFibGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhLEVBQUE7O0FBR2pCO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi10YWJsZS9tYWluLXRhYmxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhcmVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuLnNwYWNlciB7XG4gICAgZmxleC1ncm93OiAxO1xufVxuXG5hcHAtbmFtZXNwYWNlLXNlbGVjdCB7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NamespaceSelectComponent } from 'src/app/main-table/namespace-select/namespace-select.component';\n\n@Component({\n  selector: 'app-main-table',\n  templateUrl: './main-table.component.html',\n  styleUrls: ['./main-table.component.scss']\n})\nexport class MainTableComponent implements OnInit {\n  namespaces = [];\n  currNamespace: string;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n}\n","module.exports = \"<!-- Namespaces Selector -->\\n<mat-form-field>\\n  <mat-label>Select Namespace</mat-label>\\n  <mat-select [(ngModel)]=\\\"currNamespace\\\" name=\\\"namespacesSelect\\\"\\n              (selectionChange)=\\\"namespaceChanged($event.value)\\\">\\n    <mat-option *ngFor=\\\"let namespace of namespaces\\\" [value]=\\\"namespace\\\">\\n      {{ namespace }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tdGFibGUvbmFtZXNwYWNlLXNlbGVjdC9uYW1lc3BhY2Utc2VsZWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { first} from 'rxjs/operators';\nimport { NamespaceService } from 'src/app/services/namespace.service';\nimport { KubernetesService } from 'src/app/services/kubernetes.service';\nimport { ExponentialBackoff } from 'src/app/utils/polling';\n\n\n@Component({\n  selector: 'app-namespace-select',\n  templateUrl: './namespace-select.component.html',\n  styleUrls: ['./namespace-select.component.scss']\n})\nexport class NamespaceSelectComponent implements OnInit {\n  namespaces = [];\n  currNamespace: string;\n  private poller: ExponentialBackoff;\n\n  constructor(\n    private namespaceService: NamespaceService,\n    private k8s: KubernetesService,\n  ) {\n    this.poller = new ExponentialBackoff();\n  }\n\n  ngOnInit() {\n    // Poll untill you get existing Namespaces\n    this.poller.start().subscribe(() => {\n      this.k8s.getNamespaces().pipe(first()).subscribe(namespaces => {\n        this.namespaces = namespaces;\n\n        if (!this.currNamespace || this.currNamespace.length === 0) {\n          this.namespaceService.updateSelectedNamespace('kubeflow');\n        } else {\n          this.namespaceService.updateSelectedNamespace(this.currNamespace);\n        }\n\n        // stop polling\n        this.poller.stop();\n        this.poller.getPoller().unsubscribe();\n      });\n    });\n\n    // Keep track of the selected namespace\n    this.namespaceService.getSelectedNamespace().subscribe(namespace => {\n      this.currNamespace = namespace;\n    });\n  }\n\n  namespaceChanged(namespace: string) {\n    this.namespaceService.updateSelectedNamespace(namespace);\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\n<div mat-dialog-content>\\n  <p>{{data.message}}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"data.no\\\" cdkFocusInitial>{{data.no.toUpperCase()}}</button>\\n  <button mat-button [mat-dialog-close]=\\\"data.yes\\\" >{{data.yes.toUpperCase()}}</button>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tdGFibGUvcmVzb3VyY2UtdGFibGUvY29uZmlybS1kaWFsb2cvY29uZmlybS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\ninterface DialogConfig {\n  title: string;\n  message: string;\n  yes?: string;\n  no?: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogConfig) { }\n\n  onNoClick(): void {\n    this.dialogRef.close('no');\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z4\\\">\\n\\n  <div class=\\\"header\\\">\\n    <p>Notebook Servers</p>\\n\\n    <div class=\\\"spacer\\\"></div>\\n\\n    <a routerLink=\\\"/new\\\">\\n      <button mat-button id=\\\"add-nb\\\" color=primary>\\n        <mat-icon>add</mat-icon>NEW SERVER\\n      </button>\\n    </a>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n  \\n  <mat-card-content>\\n    <table mat-table [dataSource]=\\\"dataSource\\\" [trackBy]=\\\"trackByFn\\\" matSort>\\n      <!-- Status Column -->\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef> Status </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\">\\n          <!-- Running -->\\n          <mat-icon *ngIf=\\\"elem.status === 'running'\\\" [ngClass]=\\\"['running', 'status']\\\"\\n                    [matTooltip]=\\\"elem.reason\\\">check_circle\\n          </mat-icon>\\n\\n          <!-- Warning -->\\n          <mat-icon *ngIf=\\\"elem.status === 'warning'\\\" [ngClass]=\\\"['warning', 'status']\\\"\\n                    [matTooltip]=\\\"elem.reason\\\">warning\\n          </mat-icon>\\n\\n          <!-- Error -->\\n          <mat-icon *ngIf=\\\"elem.status === 'error'\\\" [ngClass]=\\\"['error', 'status']\\\"\\n                    [matTooltip]=\\\"elem.reason\\\">clear\\n          </mat-icon>\\n\\n          <!-- Waiting -->\\n          <mat-spinner *ngIf=\\\"elem.status === 'waiting'\\\" [matTooltip]=\\\"elem.reason\\\"\\n                       diameter=24 class='inline'>\\n          </mat-spinner>\\n        </td>\\n      </ng-container>\\n      \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\"> {{elem.name}} </td>\\n      </ng-container>\\n\\n      <!-- Age Column -->\\n      <ng-container matColumnDef=\\\"age\\\">\\n        <th mat-header-cell *matHeaderCellDef> Age </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\"> {{elem.age}} </td>\\n      </ng-container>\\n\\n      <!-- Image Column -->\\n      <ng-container matColumnDef=\\\"image\\\">\\n        <th mat-header-cell *matHeaderCellDef> Image </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\"> \\n          <span [matTooltip]=\\\"elem.image\\\">{{elem.shortImage}}</span> </td>\\n      </ng-container>\\n\\n      <!-- CPU Column -->\\n      <ng-container matColumnDef=\\\"cpu\\\">\\n        <th mat-header-cell *matHeaderCellDef> CPU </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\"> {{elem.cpu}} </td>\\n      </ng-container>\\n\\n      <!-- Memory Column -->\\n      <ng-container matColumnDef=\\\"memory\\\">\\n        <th mat-header-cell *matHeaderCellDef> Memory </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\"> {{elem.memory}} </td>\\n      </ng-container>\\n\\n      <!-- Volumes Column -->\\n      <ng-container matColumnDef=\\\"volumes\\\">\\n        <th mat-header-cell *matHeaderCellDef> Volumes </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\"> \\n          <button mat-icon-button [matMenuTriggerFor]=\\\"volsMenu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n          <mat-menu #volsMenu=\\\"matMenu\\\">\\n            <button mat-menu-item *ngFor=\\\"let vol of elem.volumes\\\">\\n              <mat-icon>storage</mat-icon>\\n              <span>{{vol}}</span>\\n            </button>\\n          </mat-menu> \\n        </td>\\n      </ng-container>\\n\\n      <!-- Actions Column -->\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\n        <td mat-cell *matCellDef=\\\"let elem\\\"> \\n          <!-- Connect to Notevook -->\\n          <button (click)=\\\"connectResource(elem)\\\" mat-button color=primary \\n                  [disabled]='elem.status !== \\\"running\\\"'>\\n            CONNECT\\n          </button>\\n\\n          <button mat-icon-button [disabled]=\\\"elem.reason === 'Deleting Notebook Server'\\\"\\n                  (click)=\\\"deleteResource(elem)\\\">\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n        </td>\\n      </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \"mat-card {\\n  min-width: 900px;\\n  padding: 0px; }\\n\\nmat-toolbar {\\n  background: white; }\\n\\ntable {\\n  width: 100%; }\\n\\n.header {\\n  display: flex;\\n  align-items: center;\\n  padding: 0px 16px 0px 16px;\\n  height: 64px; }\\n\\n.header p {\\n  font-weight: 400;\\n  font-size: 20px; }\\n\\n.cdk-column-actions {\\n  text-align: center; }\\n\\n.mat-icon {\\n  line-height: 0.85; }\\n\\ntd.mat-cell:last-of-type, td.mat-footer-cell:last-of-type, th.mat-header-cell:last-of-type {\\n  padding-right: 0px; }\\n\\n.inline {\\n  display: inline-block; }\\n\\n.running {\\n  color: green; }\\n\\n.warning {\\n  color: orange; }\\n\\n.error {\\n  color: red; }\\n\\n.status {\\n  display: inline-flex;\\n  vertical-align: middle; }\\n\\n.delete {\\n  color: red; }\\n\\n.parent {\\n  display: flex; }\\n\\n.spacer {\\n  flex-grow: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpbW9uYXMvY29kZS9ub3RlYm9va3MtdWkvZnJvbnRlbmQvc3JjL2FwcC9tYWluLXRhYmxlL3Jlc291cmNlLXRhYmxlL3Jlc291cmNlLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCO0VBQ2hCLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxpQkFBaUIsRUFBQTs7QUFHckI7RUFDSSxXQUFXLEVBQUE7O0FBR2Y7RUFDSSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDBCQUEwQjtFQUMxQixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksZ0JBQWdCO0VBQ2hCLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxpQkFBaUIsRUFBQTs7QUFHckI7RUFDSSxrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxxQkFBcUIsRUFBQTs7QUFJekI7RUFDSSxZQUNKLEVBQUE7O0FBRUE7RUFDSSxhQUNKLEVBQUE7O0FBRUE7RUFDSSxVQUFVLEVBQUE7O0FBR2Q7RUFDSSxvQkFBb0I7RUFDcEIsc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksVUFDSixFQUFBOztBQUdBO0VBQ0ksYUFBYSxFQUFBOztBQUdqQjtFQUNJLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4tdGFibGUvcmVzb3VyY2UtdGFibGUvcmVzb3VyY2UtdGFibGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgbWluLXdpZHRoOiA5MDBweDtcbiAgICBwYWRkaW5nOiAwcHg7XG59XG5cbm1hdC10b29sYmFyIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxudGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uaGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMHB4IDE2cHggMHB4IDE2cHg7XG4gICAgaGVpZ2h0OiA2NHB4O1xufVxuXG4uaGVhZGVyIHAge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uY2RrLWNvbHVtbi1hY3Rpb25zIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tYXQtaWNvbiB7XG4gICAgbGluZS1oZWlnaHQ6IDAuODU7XG59XG5cbnRkLm1hdC1jZWxsOmxhc3Qtb2YtdHlwZSwgdGQubWF0LWZvb3Rlci1jZWxsOmxhc3Qtb2YtdHlwZSwgdGgubWF0LWhlYWRlci1jZWxsOmxhc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZy1yaWdodDogMHB4O1xufVxuXG4uaW5saW5lIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8vIFN0YXR1cyBJY29uc1xuLnJ1bm5pbmcge1xuICAgIGNvbG9yOmdyZWVuXG59XG5cbi53YXJuaW5nIHtcbiAgICBjb2xvcjogb3JhbmdlXG59XG5cbi5lcnJvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuLnN0YXR1cyB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLmRlbGV0ZSB7XG4gICAgY29sb3I6IHJlZFxufVxuXG4vLyBGbGV4XG4ucGFyZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uc3BhY2VyIHtcbiAgICBmbGV4LWdyb3c6IDE7XG59Il19 */\"","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { MatSort, MatTableDataSource, MatDialog } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { isEqual } from 'lodash';\n\nimport { NamespaceService } from 'src/app/services/namespace.service';\nimport { KubernetesService } from 'src/app/services/kubernetes.service';\nimport { Resource } from 'src/app/utils/types';\nimport { ExponentialBackoff } from 'src/app/utils/polling';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\n\n\n@Component({\n  selector: 'app-resource-table',\n  templateUrl: './resource-table.component.html',\n  styleUrls: ['./resource-table.component.scss'],\n})\nexport class ResourceTableComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n\n  // Logic data\n  resources = [];\n  currNamespace = '';\n\n  namespaceSub: Subscription;\n  resourcesSub: Subscription;\n  poller: ExponentialBackoff;\n\n  // Table data\n  displayedColumns: string[] = ['status', 'name', 'age', 'image', 'cpu', 'memory', 'volumes', 'actions'];\n  dataSource = new MatTableDataSource();\n\n  showNameFilter = false;\n\n  constructor(\n    private namespaceService: NamespaceService,\n    private k8s: KubernetesService,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n\n    // Create the exponential backoff poller\n    this.poller = new ExponentialBackoff({interval: 1000, retries: 3});\n    this.resourcesSub = this.poller.start().subscribe(() => {\n      // NOTE: We are using both the 'trackBy' feature in the Table for performance\n      // and also detecting with lodash if the new data is different from the old\n      // one. This is because, if the data changes we want to reset the poller\n      this.k8s.getResource(this.currNamespace).pipe(first())\n        .subscribe(resources => {\n          if (!isEqual(this.resources, resources)) {\n            this.resources = resources;\n            this.dataSource.data = this.resources;\n            this.poller.reset();\n            console.log(resources);\n          }\n      });\n    });\n\n    // Keep track of the selected namespace\n    this.namespaceSub = this.namespaceService.getSelectedNamespace().subscribe(namespace => {\n      this.currNamespace = namespace;\n      this.poller.reset();\n    });\n  }\n\n  ngOnDestroy() {\n    this.resourcesSub.unsubscribe();\n    this.namespaceSub.unsubscribe();\n  }\n\n  // Resource (Notebook) Actions\n  connectResource(rsrc: Resource): void {\n    window.open(`/notebook/${rsrc.namespace}/${rsrc.name}/`);\n  }\n\n  deleteResource(rsrc: Resource): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: 'fit-content',\n      data: {\n        title: 'You are about to delete Notebook Server: ' + rsrc.name,\n        message: 'Are you sure you want to delete this Notebook Server? ' +\n                 'Your data might be lost if the Server is not backed by persistent storage.',\n        yes: 'delete',\n        no: 'cancel',\n      },\n    });\n\n    dialogRef.afterClosed().pipe(first()).subscribe(result => {\n      if (!result || result !== 'delete') {\n        return;\n      }\n\n      this.k8s.deleteResource(rsrc.namespace, rsrc.name).pipe(first())\n        .subscribe(r => {\n          this.poller.reset();\n        });\n    });\n  }\n\n  // Misc\n  trackByFn(index: number, r: Resource) {\n    return `${r.name}/${r.namespace}/${r.age}/${r.status}/${r.reason}`;\n  }\n\n  toggleFilter() {\n    this.showNameFilter = !this.showNameFilter;\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n      \\n    <form novalidate (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"formCtrl\\\">\\n      <mat-card class=\\\"mat-elevation-z4\\\">\\n        <mat-card-content>\\n          <!-- Name -->\\n          <div class=\\\"group-wrapper\\\">\\n            <h3><fa-icon [icon]=\\\"['fas', 'book']\\\" class=\\\"check\\\"></fa-icon>\\n              Name\\n            </h3>\\n            <p>Specify the name of the Notebook Server and the Namespace it will belong to.</p>\\n\\n            <div class=\\\"inputs-wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Name</mat-label>\\n                <input matInput placeholder=\\\"Notebook Server's Name\\\" formControlName=\\\"name\\\"  #name>\\n                <mat-error>You must enter a value</mat-error>\\n              </mat-form-field>\\n\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Namespace</mat-label>\\n                <input matInput placeholder=\\\"Name of Namespace\\\"\\n                       formControlName=\\\"namespace\\\" readonly>\\n                <mat-error>You must enter a value</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <!-- Image -->\\n          <div class=\\\"group-wrapper\\\">\\n            <h3><fa-icon [icon]=\\\"['fab', 'docker']\\\" class=\\\"check\\\"></fa-icon>\\n              Image\\n            </h3>\\n            <p>A starter Jupyter Docker Image with a baseline deployment and typical ML packages.</p>\\n            <mat-checkbox formControlName=\\\"customImageCheck\\\">Custom Image</mat-checkbox>\\n            \\n            <mat-form-field class=\\\"wide\\\" appearance=\\\"outline\\\" *ngIf=\\\"!formCtrl.value.customImageCheck\\\">\\n              <mat-label>Image</mat-label>\\n              <mat-select placeholder=\\\"Docker Image\\\" formControlName=\\\"image\\\">\\n                <mat-option *ngFor=\\\"let img of formData.images\\\" [value]=\\\"img\\\">\\n                  {{img}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"wide\\\" appearance=\\\"outline\\\" *ngIf=\\\"formCtrl.value.customImageCheck\\\">\\n              <mat-label>Custom Image</mat-label>\\n              <input matInput placeholder=\\\"Provide a custom Image\\\" formControlName=\\\"customImage\\\" #cstmimg>\\n              <mat-error>Please provide and Image to use</mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- CPU -->\\n          <div class=\\\"group-wrapper\\\">\\n            <h3><fa-icon [icon]=\\\"['fas', 'microchip']\\\" class=\\\"check\\\"></fa-icon>\\n              CPU / RAM\\n            </h3>\\n            <p>Specify the total amount of CPU and RAM reserved by your Notebook Server. \\n              For CPU-intensive workloads, you can choose more than 1 CPU (e.g. 1.5).\\n            </p>\\n\\n            <div class=\\\"inputs-wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>CPU</mat-label>\\n                <input matInput placeholder=\\\"# of CPU Cores\\\" formControlName=\\\"cpu\\\">\\n                <mat-error>Please provide the CPU requirements</mat-error>\\n              </mat-form-field>\\n\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Memory</mat-label>\\n                <input matInput placeholder=\\\"Amount of Memory\\\" formControlName=\\\"memory\\\">\\n                <mat-error>Please provide the RAM requirements</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <!-- Workspace Volume -->\\n          <div class=\\\"group-wrapper\\\">\\n            <h3><fa-icon [icon]=\\\"['fas', 'laptop-code']\\\" class=\\\"check\\\"></fa-icon>\\n              Workspace Volume\\n            </h3>\\n            <p>Configure the Volume to be mounted as your personal Workspace.</p>\\n            <p *ngIf=\\\"formData.wsreadonly\\\">*The Cluster Administrator has disabled editing this Section!</p>\\n            <mat-checkbox formControlName=\\\"noWorkspace\\\">Don't use Persistent Storage for User's home</mat-checkbox>\\n            \\n            <app-volume *ngIf=\\\"formReady\\\"\\n                        [volume] =\\\"formCtrl.controls.workspace\\\"\\n                        [notebookName] = \\\"formCtrl.value.name\\\"\\n                        [pvcs] = \\\"pvcs\\\"\\n                        [ephemeral]=\\\"formCtrl.value.noWorkspace\\\"\\n                        [readonly]=\\\"formData.wsreadonly\\\"\\n                        [namespace]=\\\"formCtrl.value.namespace\\\"\\n                        [storageClasses]=\\\"storageClasses\\\">\\n            </app-volume>\\n          </div>\\n\\n          <!-- Data Volumes -->\\n          <div class=\\\"group-wrapper\\\">\\n            <h3><fa-icon [icon]=\\\"['fas', 'hdd']\\\" class=\\\"check\\\"></fa-icon>\\n              Data Volumes\\n            </h3>\\n            <p>Configure the Volumes to be mounted as your Datasets.</p>\\n            <p *ngIf=\\\"formData.dtreadonly\\\">*The Cluster Administrator has disabled editing this Section!</p>\\n            <button mat-stroked-button class=\\\"primary-color\\\" (click)=\\\"addVol()\\\" \\n                    type=\\\"button\\\" [disabled]=\\\"formData.dtreadonly\\\">\\n              <mat-icon>add</mat-icon>ADD VOLUME\\n            </button>\\n\\n            <div *ngFor=\\\"let vol of formDatavols; let i = index\\\" class=\\\"volume-wrapper\\\">\\n              <app-volume *ngIf=\\\"formReady\\\"\\n                          [volume] =\\\"vol\\\"\\n                          [notebookName] = \\\"formCtrl.controls.name.value\\\"\\n                          [namespace]=\\\"formCtrl.controls.namespace.value\\\"\\n                          [pvcs] = \\\"pvcs\\\"\\n                          [ephemeral]=\\\"false\\\"\\n                          [readonly]=\\\"formData.dtreadonly\\\"\\n                          [storageClasses]=\\\"storageClasses\\\">\\n              </app-volume> \\n              \\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVol(i)\\\" \\n                      type=\\\"button\\\" [disabled]=\\\"formData.dtreadonly\\\">\\n                  <mat-icon>delete</mat-icon>\\n              </button>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"group-wrapper\\\">\\n            <h3><fa-icon [icon]=\\\"['fas', 'cogs']\\\" class=\\\"check\\\"></fa-icon>\\n              Extra Resources\\n            </h3>\\n            <mat-form-field class=\\\"wide\\\" appearance=\\\"outline\\\">\\n              <mat-label>Extra Resources</mat-label>\\n              <input matInput placeholder='{\\\"nvidia.com/gpu\\\": 2}' value={{formData.extra}}\\n                    required>\\n              <mat-hint>Extra Resources available in the cluster that are needed in the Notebook.\\n              </mat-hint>\\n            </mat-form-field>\\n          </div>\\n\\n        </mat-card-content>\\n      </mat-card>\\n\\n      <!-- Crete Button -->\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"margin\\\" type=\\\"submit\\\" \\n              [disabled]=\\\"formCtrl.invalid\\\">\\n        LAUNCH\\n      </button>\\n\\n      <a routerLink=\\\"/\\\">\\n        <button mat-raised-button class=\\\"margin\\\">CANCEL</button>\\n      </a>\\n\\n    </form>\\n</div>\"","module.exports = \"h3, p {\\n  color: rgba(0, 0, 0, 0.54); }\\n\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.15); }\\n\\n.space {\\n  margin-right: 1%; }\\n\\n.margin {\\n  margin: 8px 8px 8px 0px; }\\n\\n.wide {\\n  width: 100%; }\\n\\n.divider {\\n  width: 5%; }\\n\\n.container {\\n  width: 100%;\\n  margin: 2em auto;\\n  min-width: 900px;\\n  max-width: 920px; }\\n\\n.group-wrapper {\\n  margin-bottom: 0.5rem; }\\n\\n.group-wrapper > button {\\n  margin-bottom: 0.5rem; }\\n\\n.material-icons {\\n  line-height: 0.85; }\\n\\n.inputs-wrapper {\\n  display: flex;\\n  margin-left: -0.5rem;\\n  margin-right: -0.5rem; }\\n\\n.inputs-wrapper > .mat-form-field {\\n  flex: 1 1 0px;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem; }\\n\\n.volume-wrapper {\\n  display: flex;\\n  margin-left: -0.5rem;\\n  margin-right: -0.5rem; }\\n\\n.volume-wrapper > app-volume {\\n  flex: 1 1 0px;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  width: 92%; }\\n\\n.volume-wrapper > button {\\n  flex: 1 1 0px;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpbW9uYXMvY29kZS9ub3RlYm9va3MtdWkvZnJvbnRlbmQvc3JjL2FwcC9yZXNvdXJjZS1mb3JtL3Jlc291cmNlLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBeUIsRUFBQTs7QUFHM0I7RUFDRSwwQkFBMEIsRUFBQTs7QUFHNUI7RUFFRSxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSx1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxTQUFTLEVBQUE7O0FBR1g7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLHFCQUFxQixFQUFBOztBQUd2QjtFQUNFLGFBQWE7RUFDYixvQkFBb0I7RUFDcEIscUJBQXFCLEVBQUE7O0FBSXZCO0VBQ0UsYUFBYTtFQUNiLG9CQUFvQjtFQUNwQixxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQixVQUFVLEVBQUE7O0FBR1o7RUFDRSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Jlc291cmNlLWZvcm0vcmVzb3VyY2UtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgzLCBwIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcbn1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTUpO1xufVxuXG4uc3BhY2Uge1xuICAvLyB3aWR0aDogMSU7XG4gIG1hcmdpbi1yaWdodDogMSU7XG59XG5cbi5tYXJnaW4ge1xuICBtYXJnaW46IDhweCA4cHggOHB4IDBweDtcbn1cblxuLndpZGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRpdmlkZXIge1xuICB3aWR0aDogNSU7XG59XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAyZW0gYXV0bztcbiAgbWluLXdpZHRoOiA5MDBweDtcbiAgbWF4LXdpZHRoOiA5MjBweDtcbn1cblxuLmdyb3VwLXdyYXBwZXIge1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG5cbi5ncm91cC13cmFwcGVyPmJ1dHRvbiB7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cblxuLm1hdGVyaWFsLWljb25zIHtcbiAgbGluZS1oZWlnaHQ6IDAuODU7XG59XG5cbi5pbnB1dHMtd3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1sZWZ0OiAtMC41cmVtO1xuICBtYXJnaW4tcmlnaHQ6IC0wLjVyZW07XG59XG5cbi5pbnB1dHMtd3JhcHBlcj4ubWF0LWZvcm0tZmllbGR7XG4gIGZsZXg6IDEgMSAwcHg7XG4gIHBhZGRpbmctbGVmdDogMC41cmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVyZW07XG59XG5cbi8vIERhdGEgVm9sdW1lcyB3aXRoIHRoZSBEZWxldGUgYnV0dG9uXG4udm9sdW1lLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tbGVmdDogLTAuNXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAtMC41cmVtO1xufVxuXG4udm9sdW1lLXdyYXBwZXI+YXBwLXZvbHVtZSB7XG4gIGZsZXg6IDEgMSAwcHg7XG4gIHBhZGRpbmctbGVmdDogMC41cmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVyZW07XG4gIHdpZHRoOiA5MiU7XG59IFxuXG4udm9sdW1lLXdyYXBwZXI+YnV0dG9uIHtcbiAgZmxleDogMSAxIDBweDtcbiAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNXJlbTtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport { NamespaceService } from '../services/namespace.service';\nimport { KubernetesService } from '../services/kubernetes.service';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { Volume, FormValues, DEFAULTS, SnackType } from '../utils/types';\nimport { SnackBarService } from '../services/snack-bar.service';\n\n@Component({\n  selector: 'app-resource-form',\n  templateUrl: './resource-form.component.html',\n  styleUrls: ['./resource-form.component.scss']\n})\nexport class ResourceFormComponent implements OnInit, OnDestroy {\n  currNamespace = '';\n  formData: FormValues = DEFAULTS;\n  formCtrl: FormGroup;\n\n  ephemeral = false;\n  defaultStorageclass = false;\n  storageClasses: string[] = [];\n  formReady = false;\n  pvcs: Volume[] = [];\n\n  subscriptions = new Subscription();\n\n  get formDatavols() {\n    const vols = this.formCtrl.get('datavols') as FormArray;\n    return vols.controls;\n  }\n\n  constructor(private namespaceService: NamespaceService,\n              private k8s: KubernetesService,\n              private snackBar: SnackBarService,\n              private fb: FormBuilder,\n              private router: Router) {\n    \n    // Init the form\n    this.formCtrl = this.fb.group({\n      name: ['', [Validators.required]],\n      namespace: ['', [Validators.required]],\n      image: ['', [Validators.required]],\n      customImage: ['', []],\n      customImageCheck: [false, []],\n      cpu: ['', [Validators.required]],\n      memory: ['', [Validators.required]],\n      noWorkspace: [false, []],\n      workspace: this.fb.group({\n        type: ['', [Validators.required]],\n        name: ['', [Validators.required]],\n        size: ['', [Validators.required]],\n        path: [{value: '', disabled: true}, [Validators.required]],\n        mode: ['', [Validators.required]],\n        class: ['', [Validators.required]],\n        extraFields: [{}, []],\n      }),\n      datavols: this.fb.array([]),\n      extra: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    // Read the defaults from the server\n    // this.formData = DEFAULTS;\n\n    // Update the form Values from the default ones\n    this.subscriptions.add(\n      this.k8s.getConfig().pipe(first()).subscribe(config => {\n        if (Object.keys(config).length === 0) {\n          // Don't fire on empty config\n          return;\n        }\n\n        this.initDefaultValues(config);\n        this.initFormControls();\n      })\n    );\n\n    // Keep track of the selected namespace\n    this.subscriptions.add(\n      this.namespaceService.getSelectedNamespace().subscribe(namespace => {\n        this.currNamespace = namespace;\n        this.formCtrl.controls.namespace.setValue(this.currNamespace);\n\n        this.updatePVCs(namespace);\n      })\n    );\n\n    // Check if a default StorageClass is set\n    this.subscriptions.add(\n      this.k8s.getDefaultStorageClass().pipe(first()).subscribe(defaultClass => {\n        if (defaultClass.length === 0) {\n          this.defaultStorageclass = false;\n        } else {\n          this.defaultStorageclass = true;\n        }\n      })\n    );\n\n    // Check if a default StorageClass is set\n    this.subscriptions.add(\n      this.k8s.getStorageClasses().pipe(first()).subscribe(classes => {\n        this.storageClasses = classes;\n      })\n    );\n\n    // Show a warning if no persistent storage is provided\n    this.subscriptions.add(\n      this.formCtrl.controls.noWorkspace.valueChanges.subscribe((b: boolean) => {\n        // close the snackbar if deselected\n        if (!b) {\n          this.snackBar.close();\n        } else {\n          const msg = 'Your workspace will not be persistent. You will lose all ' +\n                      'data in it, if your notebook is terminated for any reason.';\n          this.snackBar.open(msg, SnackType.Warning, 0);\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    // Unsubscriptions\n    this.subscriptions.unsubscribe();\n  }\n\n  updatePVCs(namespace: string) {\n    this.subscriptions.add(\n      this.k8s.getVolumes(namespace).pipe(first()).subscribe(\n        pvcs => {\n          this.pvcs = pvcs;\n      })\n    );\n  }\n\n  createVolumeControl(vol: Volume) {\n    const ctrl = this.fb.group({\n      type: [vol.type, [Validators.required]],\n      name: [vol.name, [Validators.required]],\n      size: [vol.size, [Validators.required]],\n      path: [vol.path, [Validators.required]],\n      mode: [vol.mode, [Validators.required]],\n      class: [vol.class, []],\n      extraFields: [{}, []],\n    });\n\n    return ctrl;\n  }\n\n  initDefaultValues(config: any) {\n    // Put the values, from the admin config file, in our internal dict\n    if (Object.keys(config).length === 0) {\n      return;\n    }\n\n    if (config.cpu) {\n      this.formData.cpu = config.cpu.value;\n    }\n    if (config.memory) {\n      this.formData.memory = config.memory.value;\n    }\n    if (config.image) {\n      this.formData.images = config.image.options;\n      this.formData.image = config.image.value;\n    }\n    if (config.workspaceVolume) {\n      const data = config.workspaceVolume.value;\n\n      this.formData.wsvolume.type = data.type.value;\n      this.formData.wsvolume.name = data.name.value;\n      this.formData.wsvolume.size = data.size.value;\n      this.formData.wsvolume.path = data.mountPath.value;\n      this.formData.wsvolume.mode = data.accessModes.value;\n      this.formData.wsvolume.class = data.class.value;\n      this.formData.wsreadonly = config.workspaceVolume.readOnly;\n    }\n\n    // Add the data volumes\n    this.formData.dtvolumes = [];\n    if (config.dataVolumes) {\n      const vols = config.dataVolumes.value;\n      vols.forEach(vol => {\n        const data = vol.value;\n        const newvol: Volume = {\n          type: data.type.value,\n          name: data.name.value,\n          size: data.size.value,\n          path: data.mountPath.value,\n          mode: data.accessModes.value,\n          class: data.class.value,\n        };\n\n        // Append it\n        this.formData.dtvolumes.push(newvol);\n      });\n    }\n    this.formData.dtreadonly = config.dataVolumes.readOnly;\n\n    if (config.extraResources) {\n      this.formData.extra = config.extraResources.value;\n    }\n  }\n\n  initFormControls() {\n\n    // Sets the values from our internal dict. This is an initialization step\n    // that should be only run once\n    this.formCtrl.controls.cpu.setValue(this.formData.cpu);\n    this.formCtrl.controls.memory.setValue(this.formData.memory);\n    this.formCtrl.controls.image.setValue(this.formData.image);\n\n    // If no storage class is provided, don't use type New\n    // if (!this.defaultStorageclass && this.formData.wsvolume.type === 'New') {\n    //   this.formData.wsvolume.type = 'None';\n    // }\n    this.formCtrl.controls.workspace = this.createVolumeControl(this.formData.wsvolume);\n\n    // Disable the mount path by default\n    const ws = this.formCtrl.controls.workspace as FormGroup;\n    ws.controls.path.disable();\n\n    // Add the data volumes\n    const arr = this.fb.array([]);\n    this.formData.dtvolumes.forEach(vol => {\n      // Create a new FormControl to append to the array\n      if (!this.defaultStorageclass && vol.type === 'New') {\n        vol.type = 'Existing';\n      }\n      const ctrl = this.createVolumeControl(vol);\n\n      // Append it\n      arr.push(ctrl);\n    });\n    this.formCtrl.controls.datavols = arr;\n\n    this.formCtrl.controls.extra.setValue(this.formData.extra);\n    this.formReady = true;\n  }\n\n  onSubmit() {\n    this.formCtrl.updateValueAndValidity();\n    // Create a deep copy of the Form's Values\n    const nb = JSON.parse(JSON.stringify(this.formCtrl.value));\n\n    // Process the volumes\n    if (nb.noWorkspace) {\n      nb.workspace.type = 'none';\n    } else if (nb.workspace.name.includes('[NEW] ')) {\n      nb.workspace.name = nb.workspace.name.replace('[NEW] ', '');\n      nb.workspace.type = 'new';\n    } else {\n      nb.workspace.type = 'existing';\n    }\n\n    for (const dtvol of nb.datavols) {\n      if (dtvol.name.includes('[NEW] ')) {\n        dtvol.name = dtvol.name.replace('[NEW] ', '');\n        dtvol.type = 'new';\n      } else {\n        dtvol.type = 'existing';\n      }\n    }\n\n    console.log(nb, this.formCtrl.valid);\n    this.subscriptions.add(\n      this.k8s.postResource(nb).pipe(first()).subscribe(result => {\n        if (result === 'posted') {\n          this.router.navigate(['/']);\n        } else if (result === 'error') {\n          this.updatePVCs(this.currNamespace);\n        }\n      })\n    );\n  }\n\n  addVol() {\n    const l: number = this.formCtrl.value.datavols.length;\n\n    // Don't create new PVCs if no default storage class exists\n    let volType: string;\n    if (!this.defaultStorageclass) {\n      volType = 'Existing';\n    } else {\n      volType = 'New';\n    }\n\n    const vol: Volume = {\n      type: volType,\n      name: '{notebook-name}-vol-' + (l + 1),\n      size: '10Gi',\n      path: '/home/jovyan/data-vol-' + (l + 1),\n      mode: 'ReadWriteOnce',\n      class: '{empty}',\n      id: l\n    };\n\n    // Push it to the control\n    const vols = this.formCtrl.get('datavols') as FormArray;\n    vols.push(this.createVolumeControl(vol));\n    this.formCtrl.updateValueAndValidity();\n  }\n\n  deleteVol(idx: number) {\n    const vols = this.formCtrl.get('datavols') as FormArray;\n    vols.removeAt(idx);\n    this.formCtrl.updateValueAndValidity();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <iframe [src]=\\\"trustedUrl\\\" width=\\\"480px\\\" height=\\\"620px\\\" frameBorder=\\\"0\\\"\\n            (load)=\\\"loaded()\\\"></iframe>\\n</div>\"","module.exports = \".container {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpbW9uYXMvY29kZS9ub3RlYm9va3MtdWkvZnJvbnRlbmQvc3JjL2FwcC9yZXNvdXJjZS1mb3JtL3ZvbHVtZS9uZXctdm9sdW1lLWZvcm0vbmV3LXZvbHVtZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Jlc291cmNlLWZvcm0vdm9sdW1lL25ldy12b2x1bWUtZm9ybS9uZXctdm9sdW1lLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICAvLyBUT0RPXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xufSJdfQ== */\"","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { environment } from 'src/environments/environment';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\n\ninterface DialogConfig {\n  namespace: string;\n}\n\n@Component({\n  selector: 'app-new-volume-form',\n  templateUrl: './new-volume-form.component.html',\n  styleUrls: ['./new-volume-form.component.scss']\n})\nexport class NewVolumeFormComponent implements OnDestroy {\n  environment = environment;\n  trustedUrl: SafeUrl;\n  namespace: string;\n\n  msgSrc: Observable<MessageEvent>;\n  subs = new Subscription();\n\n  constructor(\n    public dialogRef: MatDialogRef<NewVolumeFormComponent>,\n    private sanitizer: DomSanitizer,\n    @Inject(MAT_DIALOG_DATA) public data: DialogConfig) {\n      // Configure the URL with the selected namespace\n      this.trustedUrl = this.sanitizer.bypassSecurityTrustResourceUrl(\n        environment.form + '?namespace=' + data.namespace\n      );\n\n      // Configure the connection with the iframe\n      this.msgSrc = fromEvent<MessageEvent>(window, 'message');\n      this.subs.add(\n        this.msgSrc.subscribe(event => { this.handleMessage(event); })\n      );\n    }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  loaded(): void {\n    // console.log();\n  }\n\n  handleMessage(msgEvent: MessageEvent) {\n    const msg = msgEvent.data;\n\n    if (msg === 'close') {\n      this.dialogRef.close('close');\n    } else if (msg.charAt(0) === '{') {\n      // Volume Data received\n      this.dialogRef.close(msg);\n    }\n  }\n}\n","module.exports = \"<form *ngIf=\\\"volume\\\" novalidate [formGroup]=\\\"volume\\\">\\n  <div class=\\\"volume-wrapper\\\">\\n    <!-- Volume Name Input -->\\n    <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"!readonly\\\">\\n      <mat-label>Volume</mat-label>\\n      <mat-select formControlName=\\\"name\\\" (selectionChange)=\\\"selectionChanged($event.value)\\\">\\n        <mat-option (click)=\\\"newVolume()\\\" value=\\\"_\\\">\\n          <span>+ NEW VOLUME</span> \\n        </mat-option>\\n\\n        <mat-option *ngFor=\\\"let vol of volumes\\\" [value]=\\\"vol\\\">\\n          {{vol}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"readonly\\\">\\n      <mat-label>volume</mat-label>\\n      <input matInput formControlName=\\\"name\\\" [readonly]=\\\"readonly\\\">\\n    </mat-form-field>\\n\\n    <!-- Size Input -->\\n    <mat-form-field appearance=\\\"outline\\\" id=size>\\n      <mat-label>Size</mat-label>\\n      <input matInput formControlName=\\\"size\\\" [readonly]=\\\"readonly\\\">\\n    </mat-form-field>\\n\\n    <!-- Mode Input -->\\n    <mat-form-field appearance=\\\"outline\\\" id=mode *ngIf=\\\"readonly\\\">\\n      <mat-label>Mode</mat-label>\\n      <input matInput formControlName=\\\"mode\\\" [readonly]=\\\"readonly\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"outline\\\" id=mode *ngIf=\\\"!readonly\\\">\\n      <mat-label>Mode</mat-label>\\n      <mat-select formControlName=\\\"mode\\\">\\n        <mat-option value=\\\"ReadWriteOnce\\\">ReadWriteOnce</mat-option>\\n        <mat-option value=\\\"ReadOnlyMany\\\">ReadOnlyMany</mat-option>\\n        <mat-option value=\\\"ReadWriteMany\\\">ReadWriteMany</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <!-- Class Input -->\\n    <mat-form-field appearance=\\\"outline\\\" id=class *ngIf=\\\"!readonly\\\">\\n      <mat-label>Mode</mat-label>\\n      <mat-select formControlName=\\\"class\\\">\\n        <mat-option value=\\\"{none}\\\">none (\\\"\\\")</mat-option>\\n        <mat-option value=\\\"{empty}\\\">empty (omitted)</mat-option>\\n        <mat-option *ngFor=\\\"let sc of storageClasses\\\" [value]=\\\"sc\\\">{{sc}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"outline\\\" id=class *ngIf=\\\"readonly\\\">\\n      <mat-label>Class</mat-label>\\n      <input matInput formControlName=\\\"class\\\" [readonly]=\\\"readonly\\\">\\n    </mat-form-field>\\n\\n    <!-- Mount Input -->\\n    <mat-form-field appearance=\\\"outline\\\" id=path>\\n      <mat-label>Mount Point</mat-label>\\n      <input matInput formControlName=\\\"path\\\" [readonly]=\\\"readonly\\\">\\n    </mat-form-field>\\n  </div>\\n</form>\"","module.exports = \"mat-form-field {\\n  flex: 1 1 0px;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem; }\\n\\n#name {\\n  max-width: 20%; }\\n\\n#size {\\n  max-width: 10%; }\\n\\n#mode {\\n  max-width: 18%; }\\n\\n#class {\\n  width: 15%; }\\n\\n.volume-wrapper {\\n  display: flex;\\n  margin-left: -0.5rem;\\n  margin-right: -0.5rem; }\\n\\n.volume-wrapper > .mat-form-field {\\n  flex: 1 1 0px;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem; }\\n\\nspan {\\n  color: #1e88e5; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpbW9uYXMvY29kZS9ub3RlYm9va3MtdWkvZnJvbnRlbmQvc3JjL2FwcC9yZXNvdXJjZS1mb3JtL3ZvbHVtZS92b2x1bWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLHFCQUFxQixFQUFBOztBQUd6QjtFQUNJLGNBQ0osRUFBQTs7QUFFQTtFQUNJLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxjQUNKLEVBQUE7O0FBRUE7RUFDSSxVQUNKLEVBQUE7O0FBRUE7RUFDSSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLHFCQUFxQixFQUFBOztBQUd6QjtFQUNJLGFBQWE7RUFDYixvQkFBb0I7RUFDcEIscUJBQXFCLEVBQUE7O0FBR3pCO0VBQ0ksY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVzb3VyY2UtZm9ybS92b2x1bWUvdm9sdW1lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIGZsZXg6IDEgMSAwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XG4gICAgcGFkZGluZy1yaWdodDogMC41cmVtO1xufVxuXG4jbmFtZSB7XG4gICAgbWF4LXdpZHRoOiAyMCVcbn1cblxuI3NpemUge1xuICAgIG1heC13aWR0aDogMTAlO1xufVxuXG4jbW9kZSB7XG4gICAgbWF4LXdpZHRoOiAxOCVcbn1cblxuI2NsYXNzIHtcbiAgICB3aWR0aDogMTUlXG59XG5cbi52b2x1bWUtd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW4tbGVmdDogLTAuNXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IC0wLjVyZW07XG59XG5cbi52b2x1bWUtd3JhcHBlcj4ubWF0LWZvcm0tZmllbGR7XG4gICAgZmxleDogMSAxIDBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjVyZW07XG59XG5cbnNwYW4ge1xuICAgIGNvbG9yOiAjMWU4OGU1O1xufSJdfQ== */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Volume } from 'src/app/utils/types';\nimport { MatDialog } from '@angular/material';\nimport { NewVolumeFormComponent } from './new-volume-form/new-volume-form.component';\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './volume.component.html',\n  styleUrls: ['./volume.component.scss']\n})\nexport class VolumeComponent implements OnInit, OnDestroy {\n\n  private volumePrv: FormGroup;\n  private nbName = '';\n\n  // public  = false;\n  public cancelDefaultBehavior = false;\n  public specificVolumeAsked: string;\n\n  newPVC: Volume;\n  existingPVCs: Volume[] = [];\n  volumes: string[] = [];  // Select get values from here\n  readOnly = false;\n\n  subscriptions = new Subscription();\n\n  // ----- @Input Parameters -----\n  @Input()\n  get volume() {\n    return this.volumePrv;\n  }\n  set volume(volume: FormGroup) {\n    this.volumeCtrlChanged(volume); \n  }\n\n  @Input()\n  get notebookName() {\n    return this.nbName;\n  }\n  set notebookName(nm: string) {\n    this.notebookNameChanged(nm);\n  }\n\n  @Input()\n  set ephemeral(b: boolean) {\n    this.storageOptionChanged(b);\n  }\n\n  @Input()\n  get readonly() {\n    return this.readOnly;\n  }\n  set readonly(b: boolean) {\n    this.readOnly = b;\n  }\n\n  @Input()\n  set pvcs(data) {\n    this.pvcsChanged(data);\n  }\n\n  @Input() namespace: string;\n  @Input() storageClasses: string[] = [];\n\n\n  // ----- Get macros -----\n  get defaultNotebookVolume() {\n    return this.newPVC.name.replace('{notebook-name}', this.nbName);\n  }\n\n  get selectedVolume(): Volume {\n    let vol: Volume;\n    const volName = this.volume.controls.name.value;\n\n    if (this.selectedVolIsExistingType) {\n      vol = this.existingPVCs.find((v: Volume) => {\n        return v.name === volName;\n      });\n    } else {\n      return this.newPVC;\n    }\n\n    return vol;\n  }\n\n  get selectedVolIsExistingType(): boolean {\n    return this.volumeNames(this.existingPVCs).includes(this.volume.value.name);\n  }\n\n  get newVolName(): string {\n    return this.renderVolName(this.newPVC.name);\n  }\n\n  get newVolIsSelected() {\n    return this.volume.controls.name.value === '[NEW] ' + this.newVolName;\n  }\n\n  get newVolIsExisting(): boolean {\n    return this.volumeIsExisting(this.newVolName);\n  }\n\n\n  // ----- utility functions -----\n  volumeNames(vols: Volume[], prefix = ''): string[] {\n    const names: string[] = [];\n    for (const v of vols) {\n      if (v.name.includes('{notebook-name}')) {\n        names.push(prefix + v.name.replace('{notebook-name}', this.nbName));\n      } else {\n        names.push(prefix + v.name);\n      }\n    }\n\n    return names;\n  }\n\n  volumeIsExisting(volName: string): boolean {\n    return this.volumeNames(this.existingPVCs).includes(volName);\n  }\n\n  renderVolName(name: string): string {\n    return name.replace('{notebook-name}', this.nbName);\n  }\n\n  addNewVolume(vol: Volume): void {\n    this.newPVC = vol;\n    // Check if the name of the vol is in the existing ones\n    if (!this.newVolIsExisting) {\n      // Update the select values\n      const name = this.renderVolName(vol.name);\n      this.volumes = ['[NEW] ' + name, ...this.volumeNames(this.existingPVCs)];\n    }\n  }\n\n  updateVolInputFields(): void {\n    // Disable input fields according to volume type\n    if (this.selectedVolIsExistingType) {\n      // Disable all fields\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n      this.volume.controls.class.disable();\n    } else {\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n      this.volume.controls.class.enable();\n    }\n  }\n\n  updateVolValueFields(): void {\n    this.volume.controls.size.setValue(this.selectedVolume.size);\n    this.volume.controls.mode.setValue(this.selectedVolume.mode);\n    this.volume.controls.class.setValue(this.selectedVolume.class);\n    this.volume.controls.extraFields.setValue(this.selectedVolume.extraFields);\n  }\n\n\n  // ----- Component Functions -----\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit() {\n    // size\n    this.subscriptions.add(\n      this.volume.controls.size.valueChanges.subscribe((size: string) => {\n        this.selectedVolume.size = size;\n      })\n    );\n\n    // mode\n    this.subscriptions.add(\n      this.volume.controls.mode.valueChanges.subscribe((mode: string) => {\n        this.selectedVolume.mode = mode;\n      })\n    );\n\n    // class\n    this.subscriptions.add(\n      this.volume.controls.class.valueChanges.subscribe((c: string) => {\n        this.selectedVolume.class = c;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n\n  // ----- @Input change handling functions -----\n  notebookNameChanged(nm: string): void {\n    if (!this.newPVC) { return; }\n\n    // Check if the new Name of the [Admin-New] PVC is existing\n    this.nbName = nm;\n    if (!this.newVolIsExisting) {\n      this.volumes = ['[NEW] ' + this.newVolName, ...this.volumeNames(this.existingPVCs)];\n    } else {\n      // if the new volume is existing, we must not show the new volume\n      this.volumes = this.volumeNames(this.existingPVCs);\n    }\n\n    // If the user hasn't asked for a specifig volumee, update the selection\n    if (!this.cancelDefaultBehavior) {\n      if (this.newVolIsExisting) {\n        this.volume.controls.name.setValue(this.newVolName);\n      } else {\n        this.volume.controls.name.setValue('[NEW] ' + this.newVolName);\n      }\n    }\n\n    this.updateVolValueFields();\n    this.updateVolInputFields();\n  }\n\n  volumeCtrlChanged(vol: FormGroup): void {\n    this.volumePrv = vol;\n    this.addNewVolume(vol.value);\n\n    const name = this.renderVolName(vol.value.name);\n    if (this.volumeIsExisting(name)) {\n      this.volume.controls.name.setValue(name);\n    } else {\n      this.volume.controls.name.setValue(this.volumes[0]);\n    }\n\n    this.specificVolumeAsked = name;\n  }\n\n  storageOptionChanged(ephemeral: boolean): void {\n    if (ephemeral) {\n      // Disable all fields\n      this.volume.controls.name.disable();\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n      this.volume.controls.class.disable();\n    } else if (!ephemeral && !this.selectedVolIsExistingType) {\n      this.volume.controls.name.enable();\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n      this.volume.controls.class.enable();\n    } else {\n      this.volume.controls.name.enable();\n    }\n  }\n\n  selectionChanged(volName: string): void {\n    // _ is given when 'CREATE VOLUME' is selected, select the default volume\n    if (volName === '_') {\n      if (!this.cancelDefaultBehavior) {\n        this.volume.controls.name.setValue('[NEW] ' + this.newVolName);\n      } else if (this.existingPVCs.length > 0) {\n        this.volume.controls.name.setValue(this.specificVolumeAsked);\n      }\n      return;\n    }\n\n    this.specificVolumeAsked = volName;\n\n    // Update the values accordingly\n    this.updateVolValueFields();\n\n    // If existing PVC, then disable the options\n    this.updateVolInputFields();\n    if (this.selectedVolIsExistingType) {\n      // If user selected an existing volume, then cancel the default behavior\n      this.cancelDefaultBehavior = true;\n    } else {\n      // The user selected the PVC provided by the admin\n      this.cancelDefaultBehavior = false;\n    }\n  }\n\n  pvcsChanged(pvcs: Volume[]) {\n    this.existingPVCs = pvcs;\n\n    if (!this.newVolIsExisting) {\n      this.volumes = ['[NEW] ' + this.newVolName, ...this.volumeNames(this.existingPVCs)];\n      this.updateVolInputFields();\n    } else {\n      // Also set the selected volume\n      this.volumes = this.volumeNames(this.existingPVCs);\n      this.volume.controls.name.setValue(this.newVolName);\n\n      this.updateVolValueFields();\n      this.updateVolInputFields();\n    }\n  }\n\n\n  // ----- New Volume action -----\n  newVolume() {\n    const dialogRef = this.dialog.open(NewVolumeFormComponent, {\n      width: 'fit-content',\n      height: 'fit-content',\n      panelClass: 'custom-dialog-container',\n      data: {\n        namespace: this.namespace\n      }\n    });\n\n    dialogRef.afterClosed().pipe(first()).subscribe(resp => {\n      if (!resp || resp === 'close') {\n        // Dialog canceled, select the default volume\n        if (!this.cancelDefaultBehavior) {\n          this.volume.controls.name.setValue('[NEW] ' + this.newVolName);\n        } else if (this.existingPVCs.length > 0) {\n          this.volume.controls.name.setValue(this.specificVolumeAsked);\n        }\n        this.updateVolInputFields();\n        return;\n      }\n\n      // Add the new volume as an option\n      const vol: Volume = JSON.parse(resp);\n\n      if (!this.volumeIsExisting(vol.name)) {\n        this.addNewVolume(vol);\n        this.volume.controls.name.setValue('[NEW] ' + this.newVolName);\n      } else {\n        this.volume.controls.name.setValue(vol.name);\n      }\n\n      this.updateVolValueFields();\n      this.updateVolInputFields();\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { ReplaySubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { Resp, Resource, SnackType, Volume } from '../utils/types';\nimport { SnackBarService } from '../services/snack-bar.service';\n\n\n@Injectable()\nexport class KubernetesService {\n  constructor(private http: HttpClient,\n              private snackBar: SnackBarService) { }\n\n  private dialogState = {shown: false, msg: ''};\n\n  // GETers\n  getNamespaces() {\n    const src = new ReplaySubject<string[]>(1);\n\n    const url = environment.apiUrl + `/api/namespaces`;\n    this.http.get<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n\n        const namespaces = data.namespaces;\n        src.next(namespaces);\n      },\n      error => this.handleError(error)\n    );\n\n    return src.asObservable();\n  }\n\n  getResource(ns: string) {\n    // Get existing PVCs in a namespace\n    const url = environment.apiUrl + `/api/namespaces/${ns}/${environment.resource}`;\n    const src = new ReplaySubject<Resource[]>(1);\n\n    if (ns === '') {\n      return src.asObservable();\n    }\n\n    this.http.get<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n        const notebooks = data.notebooks as Resource[];\n        src.next(notebooks);\n      },\n      error => this.handleError(error));\n\n    return src.asObservable();\n  }\n\n  getStorageClasses() {\n    // Get existing PVCs in a namespace\n    const src = new ReplaySubject<string[]>(1);\n    const url = environment.apiUrl + `/api/storageclasses`;\n\n    this.http.get<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n        const scs = data.storageclasses;\n        src.next(scs);\n      },\n      error => this.handleError(error));\n\n    return src.asObservable();\n  }\n\n  getDefaultStorageClass() {\n    const src = new ReplaySubject<string>(1);\n    const url = environment.apiUrl + `/api/storageclasses/default`;\n\n    this.http.get<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n        const sc = data.defaultStorageClass;\n        src.next(sc);\n      },\n      error => this.handleError(error));\n\n    return src.asObservable();\n  }\n\n  getConfig() {\n    const src = new ReplaySubject<any>(1);\n    const url = environment.apiUrl + `/api/config`;\n\n    this.http.get<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n        src.next(data.config);\n      },\n      error => this.handleError(error));\n\n    return src;\n  }\n\n  getVolumes(ns: string) {\n    // Get existing PVCs in a namespace\n    const url = environment.apiUrl + `/api/namespaces/${ns}/pvcs`;\n    const src = new ReplaySubject<Volume[]>(1);\n\n    if (ns === '') {\n      return src.asObservable();\n    }\n\n    this.http.get<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n        src.next(data.pvcs);\n      },\n      error => this.handleError(error));\n\n    return src.asObservable();\n  }\n\n  // Delete functions\n  deleteResource(ns: string, nm: string) {\n    const src = new ReplaySubject<string>(1);\n    const url = environment.apiUrl + `/api/namespaces/${ns}/${environment.resource}/${nm}`;\n\n    this.http.delete<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n        src.next('posted');\n      },\n      error => this.handleError(error)\n    );\n\n    return src.asObservable();\n  }\n\n  deleteViewer(ns: string, nm: string) {\n    const obs = new ReplaySubject<string>(1);\n    const url = environment.apiUrl + `/api/namespaces/${ns}/viewers/${nm}`;\n\n    this.http.delete<Resp>(url).pipe(first()).subscribe(\n      data => {\n        this.handleBackendError(data);\n        obs.next('posted');\n      },\n      error => this.handleError(error)\n    );\n\n    return obs.asObservable();\n  }\n\n  // Post Functions\n  postResource(rsrc: Resource) {\n    const src = new ReplaySubject<string>(1);\n    const url = environment.apiUrl + `/api/namespaces/${rsrc.namespace}/${environment.resource}`;\n\n    this.http.post<Resp>(url, rsrc).pipe(first()).subscribe(\n      data => {\n        if (this.handleBackendError(data) === 'success') {\n          src.next('posted');\n        } else {\n          src.next('error');\n        }\n      },\n      error => {\n        this.handleError(error);\n        src.next('error');\n      }\n    );\n\n    return src.asObservable();\n  }\n\n// ---------------------------Error Handling----------------------------------\n  private handleBackendError(response: Resp): string {\n    if (!response.success) {\n      this.showSnack(\n        'Warning: ' + response.log,\n        SnackType.Warning\n      );\n\n      return 'error';\n    }\n    return 'success';\n  }\n\n  private handleError(error: HttpErrorResponse): string {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n      return 'error';\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      this.showSnack(\n        `${error.status}: There was an error trying to connect ` +\n        `to the backend API. ${error.message}`,\n        SnackType.Error\n      );\n\n      return 'error';\n    }\n  }\n\n  private showSnack(msg: string, type: SnackType) {\n    if (this.dialogState.shown && (this.dialogState.msg === msg)) { return; }\n\n    this.dialogState.shown = true;\n    this.dialogState.msg = msg;\n    this.snackBar.open(msg, type, 20000).afterDismissed().subscribe(\n      () => {\n        this.dialogState.shown = false;\n        this.dialogState.msg = '';\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class NamespaceService {\n\n  // Observable string sources\n  private selectedNamespaceSource = new ReplaySubject<string>(1);\n\n  // Observable string streams\n  selectedNamespace$ = this.selectedNamespaceSource.asObservable();\n\n  // GETers\n  getSelectedNamespace() {\n    return this.selectedNamespace$;\n  }\n\n  // Service message commands\n  updateSelectedNamespace(namespace: string) {\n    this.selectedNamespaceSource.next(namespace);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackBarComponent } from './snack-bar/snack-bar.component';\nimport { SnackType } from '../utils/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackBarService {\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  public open(message: string, type: SnackType, dur: number = 8000) {\n\n    return this.snackBar.openFromComponent(SnackBarComponent, {\n      duration: dur,\n      data: { msg: message, snackType: type }\n    });\n  }\n\n  public close() {\n    this.snackBar.dismiss();\n  }\n}\n","module.exports = \"<div *ngIf='data' class=\\\"snack-container\\\">\\n    <mat-icon [ngClass]='[icon, \\\"pad\\\"]'>{{icon}}</mat-icon>\\n    <span>{{data.msg}}</span>\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"dismiss()\\\">DISMISS</button>\\n</div>\"","module.exports = \".snack-container {\\n  display: flex;\\n  align-items: center; }\\n\\n.pad {\\n  margin-right: 10px; }\\n\\n.done {\\n  color: green; }\\n\\n.clear {\\n  color: red; }\\n\\n.warning {\\n  color: orange; }\\n\\nspan {\\n  width: 90%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpbW9uYXMvY29kZS9ub3RlYm9va3MtdWkvZnJvbnRlbmQvc3JjL2FwcC9zZXJ2aWNlcy9zbmFjay1iYXIvc25hY2stYmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYTtFQUNiLG1CQUFtQixFQUFBOztBQUl2QjtFQUNJLGtCQUFrQixFQUFBOztBQUd0QjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxVQUFVLEVBQUE7O0FBR2Q7RUFDSSxhQUFhLEVBQUE7O0FBR2pCO0VBQ0ksVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2VydmljZXMvc25hY2stYmFyL3NuYWNrLWJhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zbmFjay1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAvLyB3aWR0aDogNTAwcHg7XG59XG5cbi5wYWQge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLmRvbmUge1xuICAgIGNvbG9yOiBncmVlbjtcbn1cblxuLmNsZWFyIHtcbiAgICBjb2xvcjogcmVkO1xufVxuXG4ud2FybmluZyB7XG4gICAgY29sb3I6IG9yYW5nZTtcbn1cblxuc3BhbiB7XG4gICAgd2lkdGg6IDkwJTtcbn0iXX0= */\"","import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material';\nimport { SnackType } from 'src/app/utils/types';\n\n@Component({\n  selector: 'app-snack-bar',\n  templateUrl: './snack-bar.component.html',\n  styleUrls: ['./snack-bar.component.scss']\n})\nexport class SnackBarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackBarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n  get icon() {\n    switch (this.data.snackType) {\n      case SnackType.Success:\n        return 'done';\n      case SnackType.Error:\n        return 'clear';\n      case SnackType.Warning:\n        return 'warning';\n      case SnackType.Info:\n        return 'info';\n    }\n  }\n\n  dismiss() {\n    this.snackBarRef.dismiss();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatCardModule,\n  MatTableModule,\n  MatDividerModule,\n  MatSortModule,\n  MatAutocompleteModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatDialogModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatCheckboxModule,\n  MatSelectModule,\n  MatListModule,\n  MatSnackBarModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSortModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSortModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n  ]\n})\nexport class MaterialImportsModule {}\n","import { Subscription, ReplaySubject, interval, timer } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nexport interface BackoffConfig {\n    retries?: number;\n    interval?: number;\n    maxInterval?: number;\n}\n\nconst defaultConfig: BackoffConfig = {\n    retries: 1,\n    interval: 1000,\n    maxInterval: 16000,\n};\n\nexport class ExponentialBackoff {\n    // An instance of this class will have an Observable (poller) that\n    // will emit a balue with Exponential Backoff manner. We can then make\n    // a subscription to it and apply our logic\n    private retries: number;\n    private interval: number;\n    private maxInterval: number;\n\n    private scheduler: Subscription;\n    private poller: ReplaySubject<number>;\n    private n: number;\n\n    private remainingTries: number;\n    private currInterval: number;\n\n    constructor(config: BackoffConfig = defaultConfig) {\n        const conf = {...defaultConfig, ...config};\n        console.log(conf);\n\n        this.retries = conf.retries;\n        this.interval = conf.interval;\n        this.maxInterval = conf.maxInterval;\n\n        this.poller = new ReplaySubject<number>(1);\n\n        this.n = 0;\n        this.remainingTries = this.retries + 1;\n        this.currInterval = this.interval;\n    }\n\n    public start() {\n        // Reset the shceduler\n        if (this.scheduler) {\n            this.scheduler.unsubscribe();\n        }\n\n        // Start the Exponential Backoff. All the logic is in iterate()\n        this.scheduler = timer(0, this.interval).subscribe(() => {\n            this.iterate();\n        });\n\n        return this.poller;\n    }\n\n    private iterate() {\n        // Emit a new value\n        this.n++;\n        this.poller.next(this.n);\n\n        // Cancel the previous subscription and reduce the retries\n        // If no more retries, then double the interval\n        this.scheduler.unsubscribe();\n        this.remainingTries--;\n        if (this.remainingTries === 0) {\n            this.remainingTries = this.retries;\n            this.currInterval = Math.min(this.currInterval * 2, this.maxInterval);\n        }\n\n        this.scheduler = interval(this.currInterval).subscribe(() => {\n            this.iterate();\n        });\n    }\n\n    public reset() {\n        this.n = 0;\n        this.currInterval = this.interval;\n        this.remainingTries = this.retries + 1;\n\n        this.start();\n    }\n\n    public stop() {\n        if (this.scheduler) {\n            this.scheduler.unsubscribe();\n        }\n    }\n\n    public getPoller() {\n        return this.poller;\n    }\n}\n","export interface Resp {\n    namespaces?: string[];\n    notebooks?: Resource[];\n    storageclasses?: string[];\n    defaultStorageClass?: string;\n    pvcs?: Volume[];\n    config?: any;\n    success: string;\n    log?: string;\n}\n\nexport interface Resource {\n    name: string;\n    namespace: string;\n    status: string;\n    reason: string;\n    age: string;\n    image: string;\n    volumes: string[];\n    cpu: string;\n    memory: string;\n    shortImage: string;\n}\n\nexport interface Volume {\n    name: string;\n    size: string;\n    namepsace?: string;\n    class?: string;\n    mode: string;\n    type?: string;\n    path: string;\n    id?: number;\n    extraFields?: any;\n}\n\nexport interface FormValues {\n    images: string[];\n    image: string;\n    cpu: string;\n    memory: string;\n    wsvolume?: Volume;\n    wsreadonly?: boolean;\n    dtvolumes?: Volume[];\n    dtreadonly?: boolean;\n    extra?: string;\n  }\n\n\nexport const DEFAULTS: FormValues = {\n    images: [],\n    image: '',\n    cpu: '',\n    memory: '',\n    wsvolume: {\n      type: '',\n      name: '',\n      size: '',\n      path: '',\n      mode: ''\n    },\n    wsreadonly: false,\n    dtvolumes: [],\n    dtreadonly: false,\n    extra: '{}'\n};\n\n\nexport enum SnackType {\n    Success,\n    Error,\n    Warning,\n    Info,\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000',\n  resource: 'notebooks',\n  form: 'http://localhost:4444/volumes/new'\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}